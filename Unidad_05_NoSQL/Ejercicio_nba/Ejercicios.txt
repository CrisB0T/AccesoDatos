-------------------EJERCICIOS DE CONSULTA-------------------------

1.-Importar el contenido de cada fichero (el fichero es una colección) de jugadores, entrenadores y equipos.

	mongoimport --host localhost --port 27017 --db nba --collection jugadores --file "C:\Users\ifc\git\AccesoDatos\Unidad_05_NoSQL\import\jugadores.json"

2.-Consultar el identificador de equipo de Los Angeles Lakers y crear otra consulta para ver los jugadores de dicho equipo.

	db.equipos.find({"fullName": { $eq: "Los Angeles Lakers" }},{"teamId": 1}).pretty()
	db.jugadores.find({"teamId": "1610612747"}).pretty()

3.-Consultar los jugadores españoles

	db.jugadores.find({"country": "Spain"}).pretty()

4.-Consultar los jugadores que miden más de 2.10 metros.

	db.jugadores.find({"heightMeters": { $gt: "2.10" }}).sort({"heightMeters": -1}).pretty()

5.-Consultar el número de jugadores de cada posición.

	db.jugadores.count({"pos": "C"})->Solución 56 jugadores
	db.jugadores.count({"pos": "F-C"})-> Solución 24 jugadores.
	................

6.-Consultar los equipos que son franquicias NBA.

	db.equipos.find({"isNBAFranchise": true}).pretty()

7.-Consultar los equipos de la conferencia Oeste.

	db.equipos.find({"confName": "West"}).pretty()

8.-Consultar los entrenadores principales, isAssistant: false

	db.entrenadores.find({"isAssistant": false}).pretty()

9.-Jugadores que han jugado en los Lakers (teamId: 1610612747) pero no están jugando ahí.

	db.jugadores.find({ "teamId": {$ne:"1610612747"} , "teams":{$elemMatch:{"teamId":"1610612747"}}}).pretty()

10.-Jugadores cuyo pickNum = 1.
	db.jugadores.find({"draft.pickNum": {$eq: '1'}}).pretty()



----------------------EJERCICIOS DE AGREGACIÓN--------------------------

1.-Jugadores de los Lakers con sus nombres en mayúsculas.
	db.jugadores.aggregate([
		{"$project":{"firstName":"$firstName", "lastName":{"$toUpper":"$lastName"}, "teamId":"$teamId"}},
		{"$match": {"teamId": {$eq:"1610612747"}}}])

2.-Altura media y peso medio de los jugadores por cada equipo de la NBA.
	db.jugadores.aggregate([ 
		{
		$group : { 
			_id : {"teamId":"$teamId"},
			"Altura Media": { $avg: {$toDouble: "$heightMeters"}},
			"Peso Medio": { $avg: {$toDouble: "$weightKilograms"}}
		}       
	}])



3.-Nombre del jugador que más años lleva en la NBA.
	db.jugadores.aggregate([ 
	{$project: {"nbaDebutYear": {$toInt: "$nbaDebutYear"}}},
	{"$match": {"nbaDebutYear": {$ne:""}}},
	{$project: {"nbaDebutYear": {$min: "$nbaDebutYear"}}}])



"Año debut mas bajo": { $min: "$nbaDebutYear"}
4.-Partidos en los que el equipo visitante ha metido más de 100 puntos y no ha ganado.


5.-Nombre, apellidos y Edad en años de los jugadores, grabar el resultado en una colección nueva llamada jugadores_edad.


6.-Nombre, Apellido y posición del jugador de mayor y menor edad de la NBA.


7.-Paises de procedencia de los jugadores. Ordenar alfabéticamente.


8.-Mostrar los jugadores que han estado en más equipos en su carrera. Limitar a 15 registros el resultado.

